// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_HighScore
#include <HighScore.h>
#endif
#ifndef INCLUDED_SettingState
#include <SettingState.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_util_FlxSave
#include <flixel/util/FlxSave.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_6ad7b43be063d8ab_16_save,"HighScore","save",0x92ca1bfb,"HighScore.save","HighScore.hx",16,0x5172a04e)
HX_LOCAL_STACK_FRAME(_hx_pos_6ad7b43be063d8ab_30_load,"HighScore","load",0x8e342ae4,"HighScore.load","HighScore.hx",30,0x5172a04e)
HX_LOCAL_STACK_FRAME(_hx_pos_6ad7b43be063d8ab_11_boot,"HighScore","boot",0x879814f0,"HighScore.boot","HighScore.hx",11,0x5172a04e)
HX_LOCAL_STACK_FRAME(_hx_pos_6ad7b43be063d8ab_12_boot,"HighScore","boot",0x879814f0,"HighScore.boot","HighScore.hx",12,0x5172a04e)
HX_LOCAL_STACK_FRAME(_hx_pos_6ad7b43be063d8ab_13_boot,"HighScore","boot",0x879814f0,"HighScore.boot","HighScore.hx",13,0x5172a04e)

void HighScore_obj::__construct() { }

Dynamic HighScore_obj::__CreateEmpty() { return new HighScore_obj; }

void *HighScore_obj::_hx_vtable = 0;

Dynamic HighScore_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< HighScore_obj > _hx_result = new HighScore_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool HighScore_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x25dd8870;
}

int HighScore_obj::score;

int HighScore_obj::recentScore;

int HighScore_obj::totalScore;

void HighScore_obj::save(){
            	HX_STACKFRAME(&_hx_pos_6ad7b43be063d8ab_16_save)
HXLINE(  17)		::flixel::FlxG_obj::save->data->__SetField(HX_("score",52,73,d9,78),::HighScore_obj::score,hx::paccDynamic);
HXLINE(  18)		::flixel::FlxG_obj::save->data->__SetField(HX_("totalScore",ee,68,7a,7f),::HighScore_obj::totalScore,hx::paccDynamic);
HXLINE(  20)		::flixel::FlxG_obj::save->data->__SetField(HX_("masterVol",91,b3,85,ff),::SettingState_obj::masterVol,hx::paccDynamic);
HXLINE(  21)		::flixel::FlxG_obj::save->data->__SetField(HX_("moanVol",84,fd,15,39),::SettingState_obj::moanVol,hx::paccDynamic);
HXLINE(  22)		::flixel::FlxG_obj::save->data->__SetField(HX_("musicVol",6e,07,99,0d),::SettingState_obj::musicVol,hx::paccDynamic);
HXLINE(  23)		::flixel::FlxG_obj::save->data->__SetField(HX_("soundVol",84,c1,a7,19),::SettingState_obj::soundVol,hx::paccDynamic);
HXLINE(  25)		::flixel::FlxG_obj::save->flush(null(),null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(HighScore_obj,save,(void))

void HighScore_obj::load(){
            	HX_STACKFRAME(&_hx_pos_6ad7b43be063d8ab_30_load)
HXDLIN(  30)		if (hx::IsNotNull(  ::Dynamic(::flixel::FlxG_obj::save->data->__Field(HX_("totalScore",ee,68,7a,7f),hx::paccDynamic)) )) {
HXLINE(  32)			::HighScore_obj::score = ( (int)(::flixel::FlxG_obj::save->data->__Field(HX_("score",52,73,d9,78),hx::paccDynamic)) );
HXLINE(  33)			::HighScore_obj::totalScore = ( (int)(::flixel::FlxG_obj::save->data->__Field(HX_("totalScore",ee,68,7a,7f),hx::paccDynamic)) );
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(HighScore_obj,load,(void))


HighScore_obj::HighScore_obj()
{
}

bool HighScore_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"save") ) { outValue = save_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"load") ) { outValue = load_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"score") ) { outValue = ( score ); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"totalScore") ) { outValue = ( totalScore ); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"recentScore") ) { outValue = ( recentScore ); return true; }
	}
	return false;
}

bool HighScore_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"score") ) { score=ioValue.Cast< int >(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"totalScore") ) { totalScore=ioValue.Cast< int >(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"recentScore") ) { recentScore=ioValue.Cast< int >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *HighScore_obj_sMemberStorageInfo = 0;
static hx::StaticInfo HighScore_obj_sStaticStorageInfo[] = {
	{hx::fsInt,(void *) &HighScore_obj::score,HX_HCSTRING("score","\x52","\x73","\xd9","\x78")},
	{hx::fsInt,(void *) &HighScore_obj::recentScore,HX_HCSTRING("recentScore","\xb7","\x74","\x55","\xb0")},
	{hx::fsInt,(void *) &HighScore_obj::totalScore,HX_HCSTRING("totalScore","\xee","\x68","\x7a","\x7f")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void HighScore_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(HighScore_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(HighScore_obj::score,"score");
	HX_MARK_MEMBER_NAME(HighScore_obj::recentScore,"recentScore");
	HX_MARK_MEMBER_NAME(HighScore_obj::totalScore,"totalScore");
};

#ifdef HXCPP_VISIT_ALLOCS
static void HighScore_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(HighScore_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(HighScore_obj::score,"score");
	HX_VISIT_MEMBER_NAME(HighScore_obj::recentScore,"recentScore");
	HX_VISIT_MEMBER_NAME(HighScore_obj::totalScore,"totalScore");
};

#endif

hx::Class HighScore_obj::__mClass;

static ::String HighScore_obj_sStaticFields[] = {
	HX_HCSTRING("score","\x52","\x73","\xd9","\x78"),
	HX_HCSTRING("recentScore","\xb7","\x74","\x55","\xb0"),
	HX_HCSTRING("totalScore","\xee","\x68","\x7a","\x7f"),
	HX_HCSTRING("save","\x3d","\x8b","\x4d","\x4c"),
	HX_HCSTRING("load","\x26","\x9a","\xb7","\x47"),
	::String(null())
};

void HighScore_obj::__register()
{
	hx::Object *dummy = new HighScore_obj;
	HighScore_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("HighScore","\x70","\x88","\xdd","\x25");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &HighScore_obj::__GetStatic;
	__mClass->mSetStaticField = &HighScore_obj::__SetStatic;
	__mClass->mMarkFunc = HighScore_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(HighScore_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< HighScore_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = HighScore_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = HighScore_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = HighScore_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void HighScore_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_6ad7b43be063d8ab_11_boot)
HXDLIN(  11)		score = (int)0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_6ad7b43be063d8ab_12_boot)
HXDLIN(  12)		recentScore = (int)0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_6ad7b43be063d8ab_13_boot)
HXDLIN(  13)		totalScore = (int)0;
            	}
}

