// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_APIStuff
#include <APIStuff.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_475af7b1632c1669_9_boot,"APIStuff","boot",0x2a33a106,"APIStuff.boot","APIStuff.hx",9,0x1fd9dae4)
HX_LOCAL_STACK_FRAME(_hx_pos_475af7b1632c1669_10_boot,"APIStuff","boot",0x2a33a106,"APIStuff.boot","APIStuff.hx",10,0x1fd9dae4)

void APIStuff_obj::__construct() { }

Dynamic APIStuff_obj::__CreateEmpty() { return new APIStuff_obj; }

void *APIStuff_obj::_hx_vtable = 0;

Dynamic APIStuff_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< APIStuff_obj > _hx_result = new APIStuff_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool APIStuff_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x3226787e;
}

::String APIStuff_obj::APIID;

::String APIStuff_obj::EncKey;


APIStuff_obj::APIStuff_obj()
{
}

bool APIStuff_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"APIID") ) { outValue = ( APIID ); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"EncKey") ) { outValue = ( EncKey ); return true; }
	}
	return false;
}

bool APIStuff_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"APIID") ) { APIID=ioValue.Cast< ::String >(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"EncKey") ) { EncKey=ioValue.Cast< ::String >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *APIStuff_obj_sMemberStorageInfo = 0;
static hx::StaticInfo APIStuff_obj_sStaticStorageInfo[] = {
	{hx::fsString,(void *) &APIStuff_obj::APIID,HX_HCSTRING("APIID","\xd5","\x6a","\x24","\xa2")},
	{hx::fsString,(void *) &APIStuff_obj::EncKey,HX_HCSTRING("EncKey","\x05","\x16","\x5d","\x2e")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void APIStuff_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(APIStuff_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(APIStuff_obj::APIID,"APIID");
	HX_MARK_MEMBER_NAME(APIStuff_obj::EncKey,"EncKey");
};

#ifdef HXCPP_VISIT_ALLOCS
static void APIStuff_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(APIStuff_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(APIStuff_obj::APIID,"APIID");
	HX_VISIT_MEMBER_NAME(APIStuff_obj::EncKey,"EncKey");
};

#endif

hx::Class APIStuff_obj::__mClass;

static ::String APIStuff_obj_sStaticFields[] = {
	HX_HCSTRING("APIID","\xd5","\x6a","\x24","\xa2"),
	HX_HCSTRING("EncKey","\x05","\x16","\x5d","\x2e"),
	::String(null())
};

void APIStuff_obj::__register()
{
	hx::Object *dummy = new APIStuff_obj;
	APIStuff_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("APIStuff","\x1a","\x74","\xd9","\xcb");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &APIStuff_obj::__GetStatic;
	__mClass->mSetStaticField = &APIStuff_obj::__SetStatic;
	__mClass->mMarkFunc = APIStuff_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(APIStuff_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< APIStuff_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = APIStuff_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = APIStuff_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = APIStuff_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void APIStuff_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_475af7b1632c1669_9_boot)
HXDLIN(   9)		APIID = HX_("47268:Dl6bUjOr",d5,87,58,62);
            	}
{
            	HX_STACKFRAME(&_hx_pos_475af7b1632c1669_10_boot)
HXDLIN(  10)		EncKey = HX_("dZTihHqjAqgu8hyZC+bVGg==",cf,19,8b,a8);
            	}
}

