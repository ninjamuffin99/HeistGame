// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_openfl__legacy_Lib
#include <openfl/_legacy/Lib.h>
#endif
#ifndef INCLUDED_openfl__legacy_utils_JNIMemberField
#include <openfl/_legacy/utils/JNIMemberField.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_b1031236412c8622_206_new,"openfl._legacy.utils.JNIMemberField","new",0x6b2f776e,"openfl._legacy.utils.JNIMemberField.new","openfl/_legacy/utils/JNI.hx",206,0x5c37961d)
HX_LOCAL_STACK_FRAME(_hx_pos_b1031236412c8622_213_get,"openfl._legacy.utils.JNIMemberField","get",0x6b2a27a4,"openfl._legacy.utils.JNIMemberField.get","openfl/_legacy/utils/JNI.hx",213,0x5c37961d)
HX_LOCAL_STACK_FRAME(_hx_pos_b1031236412c8622_218_set,"openfl._legacy.utils.JNIMemberField","set",0x6b3342b0,"openfl._legacy.utils.JNIMemberField.set","openfl/_legacy/utils/JNI.hx",218,0x5c37961d)
HX_LOCAL_STACK_FRAME(_hx_pos_b1031236412c8622_233_boot,"openfl._legacy.utils.JNIMemberField","boot",0x56720964,"openfl._legacy.utils.JNIMemberField.boot","openfl/_legacy/utils/JNI.hx",233,0x5c37961d)
HX_LOCAL_STACK_FRAME(_hx_pos_b1031236412c8622_234_boot,"openfl._legacy.utils.JNIMemberField","boot",0x56720964,"openfl._legacy.utils.JNIMemberField.boot","openfl/_legacy/utils/JNI.hx",234,0x5c37961d)
namespace openfl{
namespace _legacy{
namespace utils{

void JNIMemberField_obj::__construct( ::Dynamic field){
            	HX_STACKFRAME(&_hx_pos_b1031236412c8622_206_new)
HXDLIN( 206)		this->field = field;
            	}

Dynamic JNIMemberField_obj::__CreateEmpty() { return new JNIMemberField_obj; }

void *JNIMemberField_obj::_hx_vtable = 0;

Dynamic JNIMemberField_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< JNIMemberField_obj > _hx_result = new JNIMemberField_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool JNIMemberField_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x4618bf5c;
}

 ::Dynamic JNIMemberField_obj::get( ::Dynamic jobject){
            	HX_STACKFRAME(&_hx_pos_b1031236412c8622_213_get)
HXDLIN( 213)		return ::openfl::_legacy::utils::JNIMemberField_obj::lime_jni_get_member(this->field,jobject);
            	}


HX_DEFINE_DYNAMIC_FUNC1(JNIMemberField_obj,get,return )

 ::Dynamic JNIMemberField_obj::set( ::Dynamic jobject, ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_b1031236412c8622_218_set)
HXLINE( 220)		::openfl::_legacy::utils::JNIMemberField_obj::lime_jni_set_member(this->field,jobject,value);
HXLINE( 221)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC2(JNIMemberField_obj,set,return )

 ::Dynamic JNIMemberField_obj::lime_jni_get_member;

 ::Dynamic JNIMemberField_obj::lime_jni_set_member;


JNIMemberField_obj::JNIMemberField_obj()
{
}

void JNIMemberField_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(JNIMemberField);
	HX_MARK_MEMBER_NAME(field,"field");
	HX_MARK_END_CLASS();
}

void JNIMemberField_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(field,"field");
}

hx::Val JNIMemberField_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { return hx::Val( get_dyn() ); }
		if (HX_FIELD_EQ(inName,"set") ) { return hx::Val( set_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"field") ) { return hx::Val( field ); }
	}
	return super::__Field(inName,inCallProp);
}

bool JNIMemberField_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 19:
		if (HX_FIELD_EQ(inName,"lime_jni_get_member") ) { outValue = ( lime_jni_get_member ); return true; }
		if (HX_FIELD_EQ(inName,"lime_jni_set_member") ) { outValue = ( lime_jni_set_member ); return true; }
	}
	return false;
}

hx::Val JNIMemberField_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"field") ) { field=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool JNIMemberField_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 19:
		if (HX_FIELD_EQ(inName,"lime_jni_get_member") ) { lime_jni_get_member=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_jni_set_member") ) { lime_jni_set_member=ioValue.Cast<  ::Dynamic >(); return true; }
	}
	return false;
}

void JNIMemberField_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("field","\xba","\x94","\x93","\x00"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo JNIMemberField_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(JNIMemberField_obj,field),HX_HCSTRING("field","\xba","\x94","\x93","\x00")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo JNIMemberField_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(void *) &JNIMemberField_obj::lime_jni_get_member,HX_HCSTRING("lime_jni_get_member","\x67","\xf9","\x77","\xa1")},
	{hx::fsObject /*Dynamic*/ ,(void *) &JNIMemberField_obj::lime_jni_set_member,HX_HCSTRING("lime_jni_set_member","\xdb","\x97","\xf5","\xa4")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String JNIMemberField_obj_sMemberFields[] = {
	HX_HCSTRING("field","\xba","\x94","\x93","\x00"),
	HX_HCSTRING("get","\x96","\x80","\x4e","\x00"),
	HX_HCSTRING("set","\xa2","\x9b","\x57","\x00"),
	::String(null()) };

static void JNIMemberField_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(JNIMemberField_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(JNIMemberField_obj::lime_jni_get_member,"lime_jni_get_member");
	HX_MARK_MEMBER_NAME(JNIMemberField_obj::lime_jni_set_member,"lime_jni_set_member");
};

#ifdef HXCPP_VISIT_ALLOCS
static void JNIMemberField_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(JNIMemberField_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(JNIMemberField_obj::lime_jni_get_member,"lime_jni_get_member");
	HX_VISIT_MEMBER_NAME(JNIMemberField_obj::lime_jni_set_member,"lime_jni_set_member");
};

#endif

hx::Class JNIMemberField_obj::__mClass;

static ::String JNIMemberField_obj_sStaticFields[] = {
	HX_HCSTRING("lime_jni_get_member","\x67","\xf9","\x77","\xa1"),
	HX_HCSTRING("lime_jni_set_member","\xdb","\x97","\xf5","\xa4"),
	::String(null())
};

void JNIMemberField_obj::__register()
{
	hx::Object *dummy = new JNIMemberField_obj;
	JNIMemberField_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("openfl._legacy.utils.JNIMemberField","\x7c","\xe8","\xaf","\x6c");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &JNIMemberField_obj::__GetStatic;
	__mClass->mSetStaticField = &JNIMemberField_obj::__SetStatic;
	__mClass->mMarkFunc = JNIMemberField_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(JNIMemberField_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(JNIMemberField_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< JNIMemberField_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = JNIMemberField_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = JNIMemberField_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = JNIMemberField_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void JNIMemberField_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_b1031236412c8622_233_boot)
HXDLIN( 233)		lime_jni_get_member = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_jni_get_member",c9,b8,8c,14),(int)2);
            	}
{
            	HX_STACKFRAME(&_hx_pos_b1031236412c8622_234_boot)
HXDLIN( 234)		lime_jni_set_member = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_jni_set_member",3d,57,0a,18),(int)3);
            	}
}

} // end namespace openfl
} // end namespace _legacy
} // end namespace utils
