// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_openfl__legacy_Lib
#include <openfl/_legacy/Lib.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_DisplayObject
#include <openfl/_legacy/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_DisplayObjectContainer
#include <openfl/_legacy/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_IBitmapDrawable
#include <openfl/_legacy/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_InteractiveObject
#include <openfl/_legacy/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_MovieClip
#include <openfl/_legacy/display/MovieClip.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_Sprite
#include <openfl/_legacy/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl__legacy_display_Stage
#include <openfl/_legacy/display/Stage.h>
#endif
#ifndef INCLUDED_openfl__legacy_events_EventDispatcher
#include <openfl/_legacy/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl__legacy_events_IEventDispatcher
#include <openfl/_legacy/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl__legacy_ui_Multitouch
#include <openfl/_legacy/ui/Multitouch.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_51bcb9282399bd1c_18___init__,"::openfl::_legacy::ui::Multitouch_obj","__init__",0xbcfc62d4,"::openfl::_legacy::ui::Multitouch_obj.__init__","openfl/_legacy/ui/Multitouch.hx",18,0xaba8e463)
HX_LOCAL_STACK_FRAME(_hx_pos_1c91c4945bff368d_36_get_inputMode,"openfl._legacy.ui.Multitouch","get_inputMode",0xa405dcb2,"openfl._legacy.ui.Multitouch.get_inputMode","openfl/_legacy/ui/Multitouch.hx",36,0xaba8e463)
HX_LOCAL_STACK_FRAME(_hx_pos_1c91c4945bff368d_49_set_inputMode,"openfl._legacy.ui.Multitouch","set_inputMode",0xe90bbebe,"openfl._legacy.ui.Multitouch.set_inputMode","openfl/_legacy/ui/Multitouch.hx",49,0xaba8e463)
HX_LOCAL_STACK_FRAME(_hx_pos_1c91c4945bff368d_63_get_supportsTouchEvents,"openfl._legacy.ui.Multitouch","get_supportsTouchEvents",0xc394bd79,"openfl._legacy.ui.Multitouch.get_supportsTouchEvents","openfl/_legacy/ui/Multitouch.hx",63,0xaba8e463)
HX_LOCAL_STACK_FRAME(_hx_pos_1c91c4945bff368d_73_boot,"openfl._legacy.ui.Multitouch","boot",0xfd2d4da4,"openfl._legacy.ui.Multitouch.boot","openfl/_legacy/ui/Multitouch.hx",73,0xaba8e463)
HX_LOCAL_STACK_FRAME(_hx_pos_1c91c4945bff368d_74_boot,"openfl._legacy.ui.Multitouch","boot",0xfd2d4da4,"openfl._legacy.ui.Multitouch.boot","openfl/_legacy/ui/Multitouch.hx",74,0xaba8e463)
HX_LOCAL_STACK_FRAME(_hx_pos_1c91c4945bff368d_75_boot,"openfl._legacy.ui.Multitouch","boot",0xfd2d4da4,"openfl._legacy.ui.Multitouch.boot","openfl/_legacy/ui/Multitouch.hx",75,0xaba8e463)
namespace openfl{
namespace _legacy{
namespace ui{

void Multitouch_obj::__construct() { }

Dynamic Multitouch_obj::__CreateEmpty() { return new Multitouch_obj; }

void *Multitouch_obj::_hx_vtable = 0;

Dynamic Multitouch_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Multitouch_obj > _hx_result = new Multitouch_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Multitouch_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x7ecccbce;
}

void Multitouch_obj::__init__(){
            	HX_STACKFRAME(&_hx_pos_51bcb9282399bd1c_18___init__)
HXLINE(  20)		::openfl::_legacy::ui::Multitouch_obj::maxTouchPoints = (int)2;
HXLINE(  21)		::openfl::_legacy::ui::Multitouch_obj::supportedGestures = null();
HXLINE(  22)		::openfl::_legacy::ui::Multitouch_obj::supportsGestureEvents = false;
            	}


int Multitouch_obj::maxTouchPoints;

::Array< ::String > Multitouch_obj::supportedGestures;

bool Multitouch_obj::supportsGestureEvents;

bool Multitouch_obj::supportsTouchEvents;

 ::Dynamic Multitouch_obj::get_inputMode(){
            	HX_STACKFRAME(&_hx_pos_1c91c4945bff368d_36_get_inputMode)
HXDLIN(  36)		 ::Dynamic _hx_tmp = hx::ClassOf< ::openfl::_legacy::ui::Multitouch >();
HXDLIN(  36)		if (( (bool)(::openfl::_legacy::ui::Multitouch_obj::lime_stage_get_multitouch_active(::openfl::_legacy::Lib_obj::get_current()->get_stage()->_hx___handle)) )) {
HXLINE(  38)			return (int)2;
            		}
            		else {
HXLINE(  42)			return (int)1;
            		}
HXLINE(  36)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Multitouch_obj,get_inputMode,return )

 ::Dynamic Multitouch_obj::set_inputMode( ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_1c91c4945bff368d_49_set_inputMode)
HXLINE(  51)		if (hx::IsEq( value,(int)0 )) {
HXLINE(  53)			return ::openfl::_legacy::ui::Multitouch_obj::get_inputMode();
            		}
HXLINE(  57)		 ::Dynamic _hx_tmp = hx::ClassOf< ::openfl::_legacy::ui::Multitouch >();
HXDLIN(  57)		 ::Dynamic _hx_tmp1 = ::openfl::_legacy::Lib_obj::get_current()->get_stage()->_hx___handle;
HXDLIN(  57)		::openfl::_legacy::ui::Multitouch_obj::lime_stage_set_multitouch_active(_hx_tmp1,hx::IsEq( value,(int)2 ));
HXLINE(  58)		return value;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Multitouch_obj,set_inputMode,return )

bool Multitouch_obj::get_supportsTouchEvents(){
            	HX_STACKFRAME(&_hx_pos_1c91c4945bff368d_63_get_supportsTouchEvents)
HXDLIN(  63)		 ::Dynamic _hx_tmp = hx::ClassOf< ::openfl::_legacy::ui::Multitouch >();
HXDLIN(  63)		return ( (bool)(::openfl::_legacy::ui::Multitouch_obj::lime_stage_get_multitouch_supported(::openfl::_legacy::Lib_obj::get_current()->get_stage()->_hx___handle)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Multitouch_obj,get_supportsTouchEvents,return )

 ::Dynamic Multitouch_obj::lime_stage_get_multitouch_supported;

 ::Dynamic Multitouch_obj::lime_stage_get_multitouch_active;

 ::Dynamic Multitouch_obj::lime_stage_set_multitouch_active;


Multitouch_obj::Multitouch_obj()
{
}

bool Multitouch_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"inputMode") ) { if (inCallProp == hx::paccAlways) { outValue = ( get_inputMode() ); return true; } }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"get_inputMode") ) { outValue = get_inputMode_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_inputMode") ) { outValue = set_inputMode_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"maxTouchPoints") ) { outValue = ( maxTouchPoints ); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"supportedGestures") ) { outValue = ( supportedGestures ); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"supportsTouchEvents") ) { outValue = ( inCallProp == hx::paccAlways ? get_supportsTouchEvents() : supportsTouchEvents ); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"supportsGestureEvents") ) { outValue = ( supportsGestureEvents ); return true; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"get_supportsTouchEvents") ) { outValue = get_supportsTouchEvents_dyn(); return true; }
		break;
	case 32:
		if (HX_FIELD_EQ(inName,"lime_stage_get_multitouch_active") ) { outValue = ( lime_stage_get_multitouch_active ); return true; }
		if (HX_FIELD_EQ(inName,"lime_stage_set_multitouch_active") ) { outValue = ( lime_stage_set_multitouch_active ); return true; }
		break;
	case 35:
		if (HX_FIELD_EQ(inName,"lime_stage_get_multitouch_supported") ) { outValue = ( lime_stage_get_multitouch_supported ); return true; }
	}
	return false;
}

bool Multitouch_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"inputMode") ) { if (inCallProp == hx::paccAlways)  ioValue = ( set_inputMode(ioValue.Cast<  ::Dynamic >()) ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"maxTouchPoints") ) { maxTouchPoints=ioValue.Cast< int >(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"supportedGestures") ) { supportedGestures=ioValue.Cast< ::Array< ::String > >(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"supportsTouchEvents") ) { supportsTouchEvents=ioValue.Cast< bool >(); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"supportsGestureEvents") ) { supportsGestureEvents=ioValue.Cast< bool >(); return true; }
		break;
	case 32:
		if (HX_FIELD_EQ(inName,"lime_stage_get_multitouch_active") ) { lime_stage_get_multitouch_active=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"lime_stage_set_multitouch_active") ) { lime_stage_set_multitouch_active=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 35:
		if (HX_FIELD_EQ(inName,"lime_stage_get_multitouch_supported") ) { lime_stage_get_multitouch_supported=ioValue.Cast<  ::Dynamic >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Multitouch_obj_sMemberStorageInfo = 0;
static hx::StaticInfo Multitouch_obj_sStaticStorageInfo[] = {
	{hx::fsInt,(void *) &Multitouch_obj::maxTouchPoints,HX_HCSTRING("maxTouchPoints","\xfe","\x7e","\x0e","\x64")},
	{hx::fsObject /*Array< ::String >*/ ,(void *) &Multitouch_obj::supportedGestures,HX_HCSTRING("supportedGestures","\x18","\xbe","\xc8","\xbc")},
	{hx::fsBool,(void *) &Multitouch_obj::supportsGestureEvents,HX_HCSTRING("supportsGestureEvents","\x5e","\xd6","\xce","\x30")},
	{hx::fsBool,(void *) &Multitouch_obj::supportsTouchEvents,HX_HCSTRING("supportsTouchEvents","\x14","\xf1","\x9d","\x6a")},
	{hx::fsObject /*Dynamic*/ ,(void *) &Multitouch_obj::lime_stage_get_multitouch_supported,HX_HCSTRING("lime_stage_get_multitouch_supported","\xa9","\x1d","\x94","\xfe")},
	{hx::fsObject /*Dynamic*/ ,(void *) &Multitouch_obj::lime_stage_get_multitouch_active,HX_HCSTRING("lime_stage_get_multitouch_active","\x6b","\x3f","\x68","\x7f")},
	{hx::fsObject /*Dynamic*/ ,(void *) &Multitouch_obj::lime_stage_set_multitouch_active,HX_HCSTRING("lime_stage_set_multitouch_active","\x77","\x0d","\x71","\xd3")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void Multitouch_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Multitouch_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Multitouch_obj::maxTouchPoints,"maxTouchPoints");
	HX_MARK_MEMBER_NAME(Multitouch_obj::supportedGestures,"supportedGestures");
	HX_MARK_MEMBER_NAME(Multitouch_obj::supportsGestureEvents,"supportsGestureEvents");
	HX_MARK_MEMBER_NAME(Multitouch_obj::supportsTouchEvents,"supportsTouchEvents");
	HX_MARK_MEMBER_NAME(Multitouch_obj::lime_stage_get_multitouch_supported,"lime_stage_get_multitouch_supported");
	HX_MARK_MEMBER_NAME(Multitouch_obj::lime_stage_get_multitouch_active,"lime_stage_get_multitouch_active");
	HX_MARK_MEMBER_NAME(Multitouch_obj::lime_stage_set_multitouch_active,"lime_stage_set_multitouch_active");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Multitouch_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Multitouch_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Multitouch_obj::maxTouchPoints,"maxTouchPoints");
	HX_VISIT_MEMBER_NAME(Multitouch_obj::supportedGestures,"supportedGestures");
	HX_VISIT_MEMBER_NAME(Multitouch_obj::supportsGestureEvents,"supportsGestureEvents");
	HX_VISIT_MEMBER_NAME(Multitouch_obj::supportsTouchEvents,"supportsTouchEvents");
	HX_VISIT_MEMBER_NAME(Multitouch_obj::lime_stage_get_multitouch_supported,"lime_stage_get_multitouch_supported");
	HX_VISIT_MEMBER_NAME(Multitouch_obj::lime_stage_get_multitouch_active,"lime_stage_get_multitouch_active");
	HX_VISIT_MEMBER_NAME(Multitouch_obj::lime_stage_set_multitouch_active,"lime_stage_set_multitouch_active");
};

#endif

hx::Class Multitouch_obj::__mClass;

static ::String Multitouch_obj_sStaticFields[] = {
	HX_HCSTRING("maxTouchPoints","\xfe","\x7e","\x0e","\x64"),
	HX_HCSTRING("supportedGestures","\x18","\xbe","\xc8","\xbc"),
	HX_HCSTRING("supportsGestureEvents","\x5e","\xd6","\xce","\x30"),
	HX_HCSTRING("supportsTouchEvents","\x14","\xf1","\x9d","\x6a"),
	HX_HCSTRING("get_inputMode","\x64","\x64","\xef","\xd0"),
	HX_HCSTRING("set_inputMode","\x70","\x46","\xf5","\x15"),
	HX_HCSTRING("get_supportsTouchEvents","\xab","\x97","\xf3","\x72"),
	HX_HCSTRING("lime_stage_get_multitouch_supported","\xa9","\x1d","\x94","\xfe"),
	HX_HCSTRING("lime_stage_get_multitouch_active","\x6b","\x3f","\x68","\x7f"),
	HX_HCSTRING("lime_stage_set_multitouch_active","\x77","\x0d","\x71","\xd3"),
	::String(null())
};

void Multitouch_obj::__register()
{
	hx::Object *dummy = new Multitouch_obj;
	Multitouch_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("openfl._legacy.ui.Multitouch","\x3c","\x0c","\x3b","\x50");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Multitouch_obj::__GetStatic;
	__mClass->mSetStaticField = &Multitouch_obj::__SetStatic;
	__mClass->mMarkFunc = Multitouch_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Multitouch_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Multitouch_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Multitouch_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Multitouch_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Multitouch_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Multitouch_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_1c91c4945bff368d_73_boot)
HXDLIN(  73)		lime_stage_get_multitouch_supported = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_stage_get_multitouch_supported",0b,41,ad,e4),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1c91c4945bff368d_74_boot)
HXDLIN(  74)		lime_stage_get_multitouch_active = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_stage_get_multitouch_active",c9,0a,62,87),(int)1);
            	}
{
            	HX_STACKFRAME(&_hx_pos_1c91c4945bff368d_75_boot)
HXDLIN(  75)		lime_stage_set_multitouch_active = ::openfl::_legacy::Lib_obj::load(HX_("lime-legacy",c1,7f,b9,87),HX_("lime_legacy_stage_set_multitouch_active",d5,d8,6a,db),(int)2);
            	}
}

} // end namespace openfl
} // end namespace _legacy
} // end namespace ui
