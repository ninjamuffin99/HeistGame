// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_io_newgrounds_objects_Error
#include <io/newgrounds/objects/Error.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_3ce2be026b218b25_7_new,"io.newgrounds.objects.Error","new",0x47e2b4c6,"io.newgrounds.objects.Error.new","io/newgrounds/objects/Error.hx",7,0x7f549c0b)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce2be026b218b25_13_toString,"io.newgrounds.objects.Error","toString",0xf4cc3a86,"io.newgrounds.objects.Error.toString","io/newgrounds/objects/Error.hx",13,0x7f549c0b)
namespace io{
namespace newgrounds{
namespace objects{

void Error_obj::__construct(::String message,hx::Null< int >  __o_code){
int code = __o_code.Default(0);
            	HX_STACKFRAME(&_hx_pos_3ce2be026b218b25_7_new)
HXLINE(   9)		this->message = message;
HXLINE(  10)		this->code = code;
            	}

Dynamic Error_obj::__CreateEmpty() { return new Error_obj; }

void *Error_obj::_hx_vtable = 0;

Dynamic Error_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Error_obj > _hx_result = new Error_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool Error_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x3365c0a6;
}

::String Error_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_3ce2be026b218b25_13_toString)
HXLINE(  15)		if ((this->code > (int)0)) {
HXLINE(  16)			return (((HX_("#",23,00,00,00) + this->code) + HX_(" - ",73,6f,18,00)) + this->message);
            		}
HXLINE(  18)		return this->message;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Error_obj,toString,return )


Error_obj::Error_obj()
{
}

void Error_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Error);
	HX_MARK_MEMBER_NAME(code,"code");
	HX_MARK_MEMBER_NAME(message,"message");
	HX_MARK_END_CLASS();
}

void Error_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(code,"code");
	HX_VISIT_MEMBER_NAME(message,"message");
}

hx::Val Error_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"code") ) { return hx::Val( code ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"message") ) { return hx::Val( message ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val Error_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"code") ) { code=inValue.Cast< int >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"message") ) { message=inValue.Cast< ::String >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Error_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("code","\x2d","\xb1","\xc4","\x41"));
	outFields->push(HX_HCSTRING("message","\xc7","\x35","\x11","\x9a"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Error_obj_sMemberStorageInfo[] = {
	{hx::fsInt,(int)offsetof(Error_obj,code),HX_HCSTRING("code","\x2d","\xb1","\xc4","\x41")},
	{hx::fsString,(int)offsetof(Error_obj,message),HX_HCSTRING("message","\xc7","\x35","\x11","\x9a")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Error_obj_sStaticStorageInfo = 0;
#endif

static ::String Error_obj_sMemberFields[] = {
	HX_HCSTRING("code","\x2d","\xb1","\xc4","\x41"),
	HX_HCSTRING("message","\xc7","\x35","\x11","\x9a"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	::String(null()) };

static void Error_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Error_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Error_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Error_obj::__mClass,"__mClass");
};

#endif

hx::Class Error_obj::__mClass;

void Error_obj::__register()
{
	hx::Object *dummy = new Error_obj;
	Error_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("io.newgrounds.objects.Error","\xd4","\x99","\xf3","\x53");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Error_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Error_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Error_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Error_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Error_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Error_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace io
} // end namespace newgrounds
} // end namespace objects
