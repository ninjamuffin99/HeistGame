// Generated by Haxe 3.4.7
#ifndef INCLUDED_openfl__legacy_utils_JNIStaticField
#define INCLUDED_openfl__legacy_utils_JNIStaticField

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_98b1358ffa61c46b_248_new)
HX_DECLARE_CLASS3(openfl,_legacy,utils,JNIStaticField)

namespace openfl{
namespace _legacy{
namespace utils{


class HXCPP_CLASS_ATTRIBUTES JNIStaticField_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef JNIStaticField_obj OBJ_;
		JNIStaticField_obj();

	public:
		enum { _hx_ClassId = 0x58e2d488 };

		void __construct( ::Dynamic field);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="openfl._legacy.utils.JNIStaticField")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"openfl._legacy.utils.JNIStaticField"); }

		hx::ObjectPtr< JNIStaticField_obj > __new( ::Dynamic field) {
			hx::ObjectPtr< JNIStaticField_obj > __this = new JNIStaticField_obj();
			__this->__construct(field);
			return __this;
		}

		static hx::ObjectPtr< JNIStaticField_obj > __alloc(hx::Ctx *_hx_ctx, ::Dynamic field) {
			JNIStaticField_obj *__this = (JNIStaticField_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(JNIStaticField_obj), true, "openfl._legacy.utils.JNIStaticField"));
			*(void **)__this = JNIStaticField_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_98b1358ffa61c46b_248_new)
HXDLIN( 248)		( ( ::openfl::_legacy::utils::JNIStaticField)(__this) )->field = field;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~JNIStaticField_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("JNIStaticField","\x27","\xa2","\xe9","\x3f"); }

		static void __boot();
		static  ::Dynamic lime_jni_get_static;
		static Dynamic lime_jni_get_static_dyn() { return lime_jni_get_static;}
		static  ::Dynamic lime_jni_set_static;
		static Dynamic lime_jni_set_static_dyn() { return lime_jni_set_static;}
		 ::Dynamic field;
		 ::Dynamic get();
		::Dynamic get_dyn();

		 ::Dynamic set( ::Dynamic value);
		::Dynamic set_dyn();

};

} // end namespace openfl
} // end namespace _legacy
} // end namespace utils

#endif /* INCLUDED_openfl__legacy_utils_JNIStaticField */ 
