// Generated by Haxe 3.4.7
#ifndef INCLUDED_openfl__legacy_utils_JNIMemberField
#define INCLUDED_openfl__legacy_utils_JNIMemberField

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_b1031236412c8622_206_new)
HX_DECLARE_CLASS3(openfl,_legacy,utils,JNIMemberField)

namespace openfl{
namespace _legacy{
namespace utils{


class HXCPP_CLASS_ATTRIBUTES JNIMemberField_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef JNIMemberField_obj OBJ_;
		JNIMemberField_obj();

	public:
		enum { _hx_ClassId = 0x4618bf5c };

		void __construct( ::Dynamic field);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="openfl._legacy.utils.JNIMemberField")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"openfl._legacy.utils.JNIMemberField"); }

		hx::ObjectPtr< JNIMemberField_obj > __new( ::Dynamic field) {
			hx::ObjectPtr< JNIMemberField_obj > __this = new JNIMemberField_obj();
			__this->__construct(field);
			return __this;
		}

		static hx::ObjectPtr< JNIMemberField_obj > __alloc(hx::Ctx *_hx_ctx, ::Dynamic field) {
			JNIMemberField_obj *__this = (JNIMemberField_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(JNIMemberField_obj), true, "openfl._legacy.utils.JNIMemberField"));
			*(void **)__this = JNIMemberField_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_b1031236412c8622_206_new)
HXDLIN( 206)		( ( ::openfl::_legacy::utils::JNIMemberField)(__this) )->field = field;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~JNIMemberField_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("JNIMemberField","\xfb","\x8c","\x1f","\x2d"); }

		static void __boot();
		static  ::Dynamic lime_jni_get_member;
		static Dynamic lime_jni_get_member_dyn() { return lime_jni_get_member;}
		static  ::Dynamic lime_jni_set_member;
		static Dynamic lime_jni_set_member_dyn() { return lime_jni_set_member;}
		 ::Dynamic field;
		 ::Dynamic get( ::Dynamic jobject);
		::Dynamic get_dyn();

		 ::Dynamic set( ::Dynamic jobject, ::Dynamic value);
		::Dynamic set_dyn();

};

} // end namespace openfl
} // end namespace _legacy
} // end namespace utils

#endif /* INCLUDED_openfl__legacy_utils_JNIMemberField */ 
