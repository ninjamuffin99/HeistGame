// Generated by Haxe 3.4.7
#ifndef INCLUDED_HighScore
#define INCLUDED_HighScore

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(HighScore)



class HXCPP_CLASS_ATTRIBUTES HighScore_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef HighScore_obj OBJ_;
		HighScore_obj();

	public:
		enum { _hx_ClassId = 0x25dd8870 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="HighScore")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"HighScore"); }

		hx::ObjectPtr< HighScore_obj > __new() {
			hx::ObjectPtr< HighScore_obj > __this = new HighScore_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< HighScore_obj > __alloc(hx::Ctx *_hx_ctx) {
			HighScore_obj *__this = (HighScore_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(HighScore_obj), false, "HighScore"));
			*(void **)__this = HighScore_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~HighScore_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("HighScore","\x70","\x88","\xdd","\x25"); }

		static void __boot();
		static int score;
		static int recentScore;
		static int totalScore;
		static void save();
		static ::Dynamic save_dyn();

		static void load();
		static ::Dynamic load_dyn();

};


#endif /* INCLUDED_HighScore */ 
