// Generated by Haxe 3.4.7
#ifndef INCLUDED_io_newgrounds_objects_Error
#define INCLUDED_io_newgrounds_objects_Error

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_3ce2be026b218b25_7_new)
HX_DECLARE_CLASS3(io,newgrounds,objects,Error)

namespace io{
namespace newgrounds{
namespace objects{


class HXCPP_CLASS_ATTRIBUTES Error_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Error_obj OBJ_;
		Error_obj();

	public:
		enum { _hx_ClassId = 0x3365c0a6 };

		void __construct(::String message,hx::Null< int >  __o_code);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="io.newgrounds.objects.Error")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"io.newgrounds.objects.Error"); }

		hx::ObjectPtr< Error_obj > __new(::String message,hx::Null< int >  __o_code) {
			hx::ObjectPtr< Error_obj > __this = new Error_obj();
			__this->__construct(message,__o_code);
			return __this;
		}

		static hx::ObjectPtr< Error_obj > __alloc(hx::Ctx *_hx_ctx,::String message,hx::Null< int >  __o_code) {
			Error_obj *__this = (Error_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Error_obj), true, "io.newgrounds.objects.Error"));
			*(void **)__this = Error_obj::_hx_vtable;
{
int code = __o_code.Default(0);
            	HX_STACKFRAME(&_hx_pos_3ce2be026b218b25_7_new)
HXLINE(   9)		( ( ::io::newgrounds::objects::Error)(__this) )->message = message;
HXLINE(  10)		( ( ::io::newgrounds::objects::Error)(__this) )->code = code;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Error_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Error","\xa8","\x3b","\x57","\x06"); }

		int code;
		::String message;
		virtual ::String toString();
		::Dynamic toString_dyn();

};

} // end namespace io
} // end namespace newgrounds
} // end namespace objects

#endif /* INCLUDED_io_newgrounds_objects_Error */ 
