// Generated by Haxe 3.4.7
#ifndef INCLUDED_io_newgrounds_objects_events_Result
#define INCLUDED_io_newgrounds_objects_events_Result

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(io,newgrounds,NGLite)
HX_DECLARE_CLASS3(io,newgrounds,objects,Error)
HX_DECLARE_CLASS4(io,newgrounds,objects,events,Result)

namespace io{
namespace newgrounds{
namespace objects{
namespace events{


class HXCPP_CLASS_ATTRIBUTES Result_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Result_obj OBJ_;
		Result_obj();

	public:
		enum { _hx_ClassId = 0x17412350 };

		void __construct( ::io::newgrounds::NGLite core, ::Dynamic data);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="io.newgrounds.objects.events.Result")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"io.newgrounds.objects.events.Result"); }
		static hx::ObjectPtr< Result_obj > __new( ::io::newgrounds::NGLite core, ::Dynamic data);
		static hx::ObjectPtr< Result_obj > __alloc(hx::Ctx *_hx_ctx, ::io::newgrounds::NGLite core, ::Dynamic data);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Result_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Result","\xfd","\xdc","\x18","\x3d"); }

		::String echo;
		::String component;
		 ::Dynamic data;
		bool success;
		bool debug;
		 ::io::newgrounds::objects::Error error;
};

} // end namespace io
} // end namespace newgrounds
} // end namespace objects
} // end namespace events

#endif /* INCLUDED_io_newgrounds_objects_events_Result */ 
