// Generated by Haxe 3.4.7
#ifndef INCLUDED_NGio
#define INCLUDED_NGio

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(NGio)



class HXCPP_CLASS_ATTRIBUTES NGio_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef NGio_obj OBJ_;
		NGio_obj();

	public:
		enum { _hx_ClassId = 0x33c4e05f };

		void __construct(::String api,::String encKey);
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="NGio")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"NGio"); }
		static hx::ObjectPtr< NGio_obj > __new(::String api,::String encKey);
		static hx::ObjectPtr< NGio_obj > __alloc(hx::Ctx *_hx_ctx,::String api,::String encKey);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~NGio_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("NGio","\x5f","\xe0","\xc4","\x33"); }

		static void __boot();
		static bool isLoggedIn;
		void onNGLogin();
		::Dynamic onNGLogin_dyn();

		void onNGMedalFetch();
		::Dynamic onNGMedalFetch_dyn();

		void onNGBoardsFetch();
		::Dynamic onNGBoardsFetch_dyn();

		void onNGScoresFetch();
		::Dynamic onNGScoresFetch_dyn();

};


#endif /* INCLUDED_NGio */ 
