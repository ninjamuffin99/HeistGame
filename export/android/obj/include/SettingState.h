// Generated by Haxe 3.4.7
#ifndef INCLUDED_SettingState
#define INCLUDED_SettingState

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
HX_DECLARE_CLASS0(SettingState)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS1(flixel,FlxState)
HX_DECLARE_CLASS2(flixel,group,FlxTypedGroup)
HX_DECLARE_CLASS2(flixel,group,FlxTypedSpriteGroup)
HX_DECLARE_CLASS2(flixel,text,FlxText)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)



class HXCPP_CLASS_ATTRIBUTES SettingState_obj : public  ::flixel::FlxState_obj
{
	public:
		typedef  ::flixel::FlxState_obj super;
		typedef SettingState_obj OBJ_;
		SettingState_obj();

	public:
		enum { _hx_ClassId = 0x79d7a681 };

		void __construct( ::Dynamic MaxSize);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="SettingState")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"SettingState"); }
		static hx::ObjectPtr< SettingState_obj > __new( ::Dynamic MaxSize);
		static hx::ObjectPtr< SettingState_obj > __alloc(hx::Ctx *_hx_ctx, ::Dynamic MaxSize);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~SettingState_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("SettingState","\x81","\xa6","\xd7","\x79"); }

		static void __boot();
		static Float masterVol;
		static Float musicVol;
		static Float soundVol;
		static Float moanVol;
		static bool aprilFools;
		 ::flixel::text::FlxText musicTxt;
		 ::flixel::text::FlxText speedTxt;
		::cpp::VirtualArray settingsArray;
		int _selection;
		 ::flixel::group::FlxTypedSpriteGroup _selector;
		 ::flixel::text::FlxText _selLeft;
		 ::flixel::text::FlxText _selRight;
		 ::flixel::group::FlxTypedGroup _grpValues;
		 ::flixel::group::FlxTypedGroup _grpText;
		 ::flixel::text::FlxText exitTxt;
		void create();

		void update(Float elapsed);

		void controls();
		::Dynamic controls_dyn();

		void changeValue(Float diff);
		::Dynamic changeValue_dyn();

		void changePos();
		::Dynamic changePos_dyn();

};


#endif /* INCLUDED_SettingState */ 
